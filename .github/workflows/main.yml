on:
  schedule:
    - cron: '0 0 * * 6'  
  # push:  # 可选：推送代码时也触发，便于测试
  #   branches: [ master ]
  workflow_dispatch:      # 允许手动触发
permissions:
    issues: write  # 允许创建和修改 issue
    contents: read  # 允许读取仓库内容
jobs:
  build-and-generate:
    runs-on: ubuntu-latest  # 使用最新的 Ubuntu 运行器

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'  # 指定你的 Python 版本
    - name: Install uv
      uses: astral-sh/setup-uv@v5

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        uv sync
        uv add playwright
        uv run python -m playwright install --with-deps
        sudo apt update
        sudo apt install -y neofetch python3-pip libpango-1.0-0 libharfbuzz0b libpangoft2-1.0-0 libharfbuzz-subset0 libffi-dev libjpeg-dev libopenjp2-7-dev
        neofetch

    - name: Run Python script
      run: uv run src/hackernews/hacker_spider.py  # 执行你的主脚本
    
    - name: Convert To AZW3
      run: |
        sudo apt install -y calibre
        ebook-convert outs/HackerNews.epub outs/HackerNews.azw3
      
    - name: Upload EPUB artifact
      uses: actions/upload-artifact@v4
      with:
        name: generated-epub
        path: outs/ # 你生成的 EPUB 文件路径
        # path 也可以是目录，例如 'outputs/'
        retention-days: 7  # 可选：设置 artifact 保留天数（默认 90）
        compression-level: 9
    
    # - name: Upload debug files
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: debug-files
    #     path: stories/
    #     retention-days: 7
    - name: Send Issue
      env: # Set the secret as an input
        CLIENT_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: python issue_sender.py